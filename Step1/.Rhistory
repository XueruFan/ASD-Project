#                    "外侧枕叶","舌回","距状沟周围皮层","楔叶皮层",
#                    "脑岛"))
en_labels <- rev(c("superiorfrontal", "rostralmiddlefrontal", "caudalmiddlefrontal",
"parsopercularis", "parstriangularis", "parsorbitalis", "frontalpole",
"lateralorbitofrontal", "medialorbitofrontal",
"rostralanteriorcingulate", "caudalanteriorcingulate",
"precentral", "paracentral", "postcentral",
"supramarginal", "posteriorcingulate", "isthmuscingulate",
"precuneus", "superiorparietal", "inferiorparietal",
"transversetemporal", "bankssts",
"superiortemporal", "middletemporal", "inferiortemporal",
"fusiform", "parahippocampal", "entorhinal", "temporalpole",
"lateraloccipital", "lingual", "pericalcarine", "cuneus",
"insula"))
cn_labels <- rev(c("Superior frontal", "Rostral middle frontal", "Caudal middle frontal",
"Pars opercularis", "Pars triangularis", "Pars orbitalis", "Frontal pole",
"Lateral orbital frontal", "Medial orbital frontal",
"Rostral anterior cingulate", "Caudal anterior cingulate",
"Precentral", "Paracentral", "Postcentral",
"Supramarginal", "Posterior cingulate", "Isthmus cingulate",
"Precuneus", "Superior parietal", "Inferior parietal",
"Transverse temporal", "Banks superior temporal",
"Superior temporal", "Middle temporal", "Inferior temporal",
"Fusiform", "Parahippocampal", "Entorhinal", "Temporal pole",
"Lateral occipital", "Lingual", "Pericalcarine", "Cuneus",
"Insula"))
all_data$Measure <- factor(all_data$Measure, levels = en_labels, labels = cn_labels)
name_regional <- paste0("centile_regional_density_", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.7, quantile_lines = TRUE, size = 0.5, quantiles = 2, alpha = .95) +
geom_density_ridges(scale = 2, quantile_lines = TRUE, size = 0.75, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +  # 使用提供的颜色列表
coord_fixed(ratio = 0.15) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 8),
axis.text.x = element_text(size = 6))
ggsave(file.path(plotDir, name_regional), width = 5, height = 8, units = "in", dpi = 500)
View(asd_parc)
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
objects_to_keep <- c("plotDir", "abideDir", "resDir", "newDate", "cluster_result", "asd_centile",
"asd_parc")
rm(list = (setdiff(ls(), objects_to_keep)))
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
colnames(asd_parc_centile) = "label"
asd_parc_centile$median <- apply(asd_parc, 2, median, na.rm = TRUE)
# save the median
name <- paste0("centile_median_", newDate, ".xlsx")
write.xlsx(asd_parc_centile, file.path(resDir, name))
resuDir <- file.path(cabicDir, "result")
# abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # MAC
cabicDir <- 'E:/PhDproject/CABIC'
resuDir <- file.path(cabicDir, "result")
plotDir <- file.path(resuDir, "plot")
newDate <- "250117"
oldDate <- "240928"
objects_to_keep <- c("plotDir", "abideDir", "resuDir", "newDate", "cluster_result", "asd_centile",
"asd_parc")
rm(list = (setdiff(ls(), objects_to_keep)))
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
colnames(asd_parc_centile) = "label"
asd_parc_centile$median <- apply(asd_parc, 2, median, na.rm = TRUE)
# save the median
name <- paste0("centile_median_", newDate, ".xlsx")
write.xlsx(asd_parc_centile, file.path(resuDir, name))
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.35, 0.55),
breaks = seq(0.35, 0.55, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
View(asd_parc_centile)
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.41, 0.69),
breaks = seq(0.41, 0.69, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
name <- file.path(plotDir, paste0("centile_regional_median_", newDate, ".png"))
ggsave(name, width = 7.8, height = 3, units = "in", dpi = 500)
asd_global <- asd_centile[which(names(asd_centile) == "GMV"):which(names(asd_centile) == "totalSA2")]
# transfer to long data
all_data <- gather(asd_global, key = "Measure", value = "Centile", GMV:totalSA2, na.rm = TRUE,
factor_key = TRUE)
# 修改度量标准的显示名称
all_data$Measure <- factor(all_data$Measure, levels = rev(c("TCV", "WMV", "GMV", "sGMV", "Ventricles",
"meanCT2", "totalSA2")),
# labels = rev(c("脑总容积", "白质总体积",
#            "皮层灰质总体积", "皮层下灰质总体积",
#            "脑脊液总体积", "平均皮层厚度",
#            "皮层总表面积")))
labels = rev(c("TCV", "WMV",
"GMV", "sGMV",
"CSF", "mCT",
"tSA")))
name_global <- paste0("centile_global_density_5", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 0.7, quantiles = 2, alpha = .88) +
geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 1, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +
coord_fixed(ratio = 0.2) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
# dev.off()
ggsave(file.path(plotDir, name_global), width = 6, height = 5, units = "in", dpi = 500)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
cabicDir <- 'E:/PhDproject/CABIC'
resuDir <- file.path(cabicDir, "result")
newDate <- "250117"
oldDate <- "240928"
name <- paste0("cabic_centile_", oldDate, ".csv")
cabic_centile <- read.csv(file.path(resuDir, name))
asd_centile <- subset(cabic_centile, dx == "ASD" & sex == "Male")
View(asd_centile)
data_raw <- subset(cabic_centile, dx == "ASD" & sex == "Male")
View(data_raw)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
# abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # MAC
abideDir <- 'E:/PhDproject/ABIDE' # Windows
dataDir <- file.path(abideDir, "Preprocessed")
resDir <- file.path(abideDir, "Analysis")
resDate <- "240315"
newDate <- "240610"
abide_centile <- read.csv(file.path(dataDir, paste0("abide_All_centile_513_", resDate, ".csv")))
data_raw <- subset(abide_centile, dx == "ASD" & sex == "Male")
View(data_raw)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
cabicDir <- 'E:/PhDproject/CABIC'
resuDir <- file.path(cabicDir, "result")
newDate <- "250117"
oldDate <- "240928"
name <- paste0("cabic_centile_", oldDate, ".csv")
cabic_centile <- read.csv(file.path(resuDir, name))
data_raw <- subset(cabic_centile, dx == "ASD" & sex == "Male")
View(data_raw)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
# abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # MAC
abideDir <- 'E:/PhDproject/ABIDE' # Windows
dataDir <- file.path(abideDir, "Preprocessed")
resDir <- file.path(abideDir, "Analysis")
resDate <- "240315"
newDate <- "240610"
abide_centile <- read.csv(file.path(dataDir, paste0("abide_All_centile_513_", resDate, ".csv")))
data_raw <- subset(abide_centile, dx == "ASD" & sex == "Male")
View(data_raw)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
cabicDir <- 'E:/PhDproject/CABIC'
resuDir <- file.path(cabicDir, "result")
newDate <- "250117"
oldDate <- "240928"
name <- paste0("cabic_centile_", oldDate, ".csv")
cabic_centile <- read.csv(file.path(resuDir, name))
data_raw <- subset(cabic_centile, dx == "ASD" & sex == "Male")
View(data_raw)
data_centile <- na.omit(data_raw[, -2:-5])
data <- data_centile[, -1]
View(data)
# 检查数据框中有无缺失值
any(is.na(data))
# 对每列进行 Jarque-Bera 检验并提取 p 值
p_values <- sapply(data, function(column) jarque.bera.test(column)$p.value)
# 创建新的数据框，包含列名和对应的 p 值
datap <- data.frame(
# Column = names(data),  # 第一列：data 数据框中的列名
P_Value = p_values     # 第二列：对应的 p 值
)
write.csv(datap, file.path(resDir, paste0("centile_normtest_", newDate, ".csv")))
write.csv(datap, file.path(resuDir, paste0("centile_normtest_", newDate, ".csv")))
rm(list=ls())
packages <- c("ggplot2", "ggseg", "ggridges", "tidyr", "Cairo")
# sapply(packages, install.packages, character.only = TRUE)
sapply(packages, require, character.only = TRUE)
# define filefolder
abideDir <- 'E:/PhDproject/ABIDE'
dataDir <- file.path(abideDir, "Preprocessed")
resDir <- file.path(abideDir, "Analysis")
plotDir <- file.path(abideDir, "Plot/Density")
resdate <- "240315"
newDate <- "240610"
abide_centile <- read.csv(file.path(dataDir, paste0("abide_All_centile_510_", resdate, ".csv")))
asd_centile <- subset(abide_centile, dx == "ASD" & sex == "Male")
asd_parc <- asd_centile[, which(names(asd_centile) == "bankssts"):ncol(asd_centile)]
# transfer to long data
all_data <- gather(asd_parc, key = "Measure", value = "Centile", bankssts:insula, na.rm = TRUE,
factor_key = TRUE)
#                    "外侧眶额","内侧眶额",
#                    "前扣带喙部","前扣带尾部",
#                    "中央前回","中央旁小叶","中央后回",
#                    "缘上回","后扣带","扣带回峡部",
#                    "楔前叶","顶上皮层","顶下皮层",
#                    "颞横皮层","颞上沟后侧",
#                    "颞上回","颞中回","颞下回",
#                    "梭状回","海马旁回","内嗅皮层","颞极",
#                    "外侧枕叶","舌回","距状沟周围皮层","楔叶皮层",
#                    "脑岛"))
en_labels <- rev(c("superiorfrontal", "rostralmiddlefrontal", "caudalmiddlefrontal",
"parsopercularis", "parstriangularis", "parsorbitalis", "frontalpole",
"lateralorbitofrontal", "medialorbitofrontal",
"rostralanteriorcingulate", "caudalanteriorcingulate",
"precentral", "paracentral", "postcentral",
"supramarginal", "posteriorcingulate", "isthmuscingulate",
"precuneus", "superiorparietal", "inferiorparietal",
"transversetemporal", "bankssts",
"superiortemporal", "middletemporal", "inferiortemporal",
"fusiform", "parahippocampal", "entorhinal", "temporalpole",
"lateraloccipital", "lingual", "pericalcarine", "cuneus",
"insula"))
cn_labels <- rev(c("Superior frontal", "Rostral middle frontal", "Caudal middle frontal",
"Pars opercularis", "Pars triangularis", "Pars orbitalis", "Frontal pole",
"Lateral orbital frontal", "Medial orbital frontal",
"Rostral anterior cingulate", "Caudal anterior cingulate",
"Precentral", "Paracentral", "Postcentral",
"Supramarginal", "Posterior cingulate", "Isthmus cingulate",
"Precuneus", "Superior parietal", "Inferior parietal",
"Transverse temporal", "Banks superior temporal",
"Superior temporal", "Middle temporal", "Inferior temporal",
"Fusiform", "Parahippocampal", "Entorhinal", "Temporal pole",
"Lateral occipital", "Lingual", "Pericalcarine", "Cuneus",
"Insula"))
all_data$Measure <- factor(all_data$Measure, levels = en_labels, labels = cn_labels)
name_regional <- paste0("centile_regional_density_510_", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.7, quantile_lines = TRUE, size = 0.5, quantiles = 2, alpha = .95) +
geom_density_ridges(scale = 2, quantile_lines = TRUE, size = 0.75, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +  # 使用提供的颜色列表
coord_fixed(ratio = 0.15) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 8),
axis.text.x = element_text(size = 6))
ggsave(file.path(plotDir, name_regional), width = 5, height = 8, units = "in", dpi = 500)
objects_to_keep <- c("plotDir", "abideDir", "resDir", "newDate", "cluster_result", "asd_centile",
"asd_parc")
rm(list = (setdiff(ls(), objects_to_keep)))
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
colnames(asd_parc_centile) = "label"
asd_parc_centile$median <- apply(asd_parc, 2, median, na.rm = TRUE)
# save the median
name <- paste0("centile_median_510_", newDate, ".xlsx")
write.xlsx(asd_parc_centile, file.path(resDir, name))
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.35, 0.55),
breaks = seq(0.35, 0.55, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
name <- file.path(plotDir, paste0("centile_regional_median_510_", newDate, ".png"))
ggsave(name, width = 7.8, height = 3, units = "in", dpi = 500)
asd_global <- asd_centile[which(names(asd_centile) == "GMV"):which(names(asd_centile) == "totalSA2")]
# transfer to long data
all_data <- gather(asd_global, key = "Measure", value = "Centile", GMV:totalSA2, na.rm = TRUE,
factor_key = TRUE)
# 修改度量标准的显示名称
all_data$Measure <- factor(all_data$Measure, levels = rev(c("TCV", "WMV", "GMV", "sGMV", "Ventricles",
"meanCT2", "totalSA2")),
# labels = rev(c("脑总容积", "白质总体积",
#            "皮层灰质总体积", "皮层下灰质总体积",
#            "脑脊液总体积", "平均皮层厚度",
#            "皮层总表面积")))
labels = rev(c("TCV", "WMV",
"GMV", "sGMV",
"CSF", "mCT",
"tSA")))
name_global <- paste0("centile_global_density_510_", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 0.7, quantiles = 2, alpha = .88) +
geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 1, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +
coord_fixed(ratio = 0.2) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
# dev.off()
ggsave(file.path(plotDir, name_global), width = 6, height = 5, units = "in", dpi = 500)
objects_to_keep <- c("plotDir", "abideDir", "resDir", "newDate", "cluster_result", "asd_centile",
"asd_parc")
rm(list = (setdiff(ls(), objects_to_keep)))
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
colnames(asd_parc_centile) = "label"
asd_parc_centile$median <- apply(asd_parc, 2, median, na.rm = TRUE)
View(asd_parc_centile)
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.35, 0.55),
breaks = seq(0.35, 0.55, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.34, 0.55),
breaks = seq(0.34, 0.55, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
name <- file.path(plotDir, paste0("centile_regional_median_510_", newDate, ".png"))
ggsave(name, width = 7.8, height = 3, units = "in", dpi = 500)
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.34, 0.51),
breaks = seq(0.34, 0.51, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
name <- file.path(plotDir, paste0("centile_regional_median_510_", newDate, ".png"))
ggsave(name, width = 7.8, height = 3, units = "in", dpi = 500)
rm(list=ls())
packages <- c("mclust", "ggplot2", "cluster", "Cairo", "tseries", "openxlsx")
# sapply(packages,install.packages,character.only=TRUE)
sapply(packages, require, character.only = TRUE)
# abideDir <- '/Volumes/Xueru/PhDproject/ABIDE' # MAC
abideDir <- 'E:/PhDproject/ABIDE' # Windows
dataDir <- file.path(abideDir, "Preprocessed")
resDir <- file.path(abideDir, "Analysis")
resDate <- "240315"
newDate <- "240610"
abide_centile <- read.csv(file.path(dataDir, paste0("abide_All_centile_510_", resDate, ".csv")))
data_raw <- subset(abide_centile, dx == "ASD" & sex == "Male")
data_centile <- na.omit(data_raw[, -2:-6])
data <- data_centile[, -1]
# 检查数据框中有无缺失值
any(is.na(data))
# 对每列进行 Jarque-Bera 检验并提取 p 值
p_values <- sapply(data, function(column) jarque.bera.test(column)$p.value)
# 创建新的数据框，包含列名和对应的 p 值
datap <- data.frame(
# Column = names(data),  # 第一列：data 数据框中的列名
P_Value = p_values     # 第二列：对应的 p 值
)
write.csv(datap, file.path(resDir, paste0("centile_normtest_510_", newDate, ".csv")))
rm(list=ls())
packages <- c("ggplot2", "ggseg", "ggridges", "tidyr", "do", "dplyr", "Cairo", "openxlsx")
# sapply(packages, install.packages, character.only = TRUE)
sapply(packages, require, character.only = TRUE)
cabicDir <- 'E:/PhDproject/CABIC'
resuDir <- file.path(cabicDir, "result")
plotDir <- file.path(resuDir, "plot")
newDate <- "250117"
oldDate <- "240928"
name <- paste0("cabic_centile_510_", oldDate, ".csv")
cabic_centile <- read.csv(file.path(resuDir, name))
View(cabic_centile)
asd_centile <- subset(cabic_centile, dx == "ASD" & sex == "Male")
asd_parc <- asd_centile[, which(names(asd_centile) == "bankssts"):ncol(asd_centile)]
# transfer to long data
all_data <- gather(asd_parc, key = "Measure", value = "Centile", bankssts:insula, na.rm = TRUE,
factor_key = TRUE)
#                    "外侧眶额","内侧眶额",
#                    "前扣带喙部","前扣带尾部",
#                    "中央前回","中央旁小叶","中央后回",
#                    "缘上回","后扣带","扣带回峡部",
#                    "楔前叶","顶上皮层","顶下皮层",
#                    "颞横皮层","颞上沟后侧",
#                    "颞上回","颞中回","颞下回",
#                    "梭状回","海马旁回","内嗅皮层","颞极",
#                    "外侧枕叶","舌回","距状沟周围皮层","楔叶皮层",
#                    "脑岛"))
en_labels <- rev(c("superiorfrontal", "rostralmiddlefrontal", "caudalmiddlefrontal",
"parsopercularis", "parstriangularis", "parsorbitalis", "frontalpole",
"lateralorbitofrontal", "medialorbitofrontal",
"rostralanteriorcingulate", "caudalanteriorcingulate",
"precentral", "paracentral", "postcentral",
"supramarginal", "posteriorcingulate", "isthmuscingulate",
"precuneus", "superiorparietal", "inferiorparietal",
"transversetemporal", "bankssts",
"superiortemporal", "middletemporal", "inferiortemporal",
"fusiform", "parahippocampal", "entorhinal", "temporalpole",
"lateraloccipital", "lingual", "pericalcarine", "cuneus",
"insula"))
cn_labels <- rev(c("Superior frontal", "Rostral middle frontal", "Caudal middle frontal",
"Pars opercularis", "Pars triangularis", "Pars orbitalis", "Frontal pole",
"Lateral orbital frontal", "Medial orbital frontal",
"Rostral anterior cingulate", "Caudal anterior cingulate",
"Precentral", "Paracentral", "Postcentral",
"Supramarginal", "Posterior cingulate", "Isthmus cingulate",
"Precuneus", "Superior parietal", "Inferior parietal",
"Transverse temporal", "Banks superior temporal",
"Superior temporal", "Middle temporal", "Inferior temporal",
"Fusiform", "Parahippocampal", "Entorhinal", "Temporal pole",
"Lateral occipital", "Lingual", "Pericalcarine", "Cuneus",
"Insula"))
all_data$Measure <- factor(all_data$Measure, levels = en_labels, labels = cn_labels)
name_regional <- paste0("centile_regional_density_510_", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.7, quantile_lines = TRUE, size = 0.5, quantiles = 2, alpha = .95) +
geom_density_ridges(scale = 2, quantile_lines = TRUE, size = 0.75, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +  # 使用提供的颜色列表
coord_fixed(ratio = 0.15) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 8),
axis.text.x = element_text(size = 6))
ggsave(file.path(plotDir, name_regional), width = 5, height = 8, units = "in", dpi = 500)
objects_to_keep <- c("plotDir", "abideDir", "resuDir", "newDate", "cluster_result", "asd_centile",
"asd_parc")
rm(list = (setdiff(ls(), objects_to_keep)))
# calculate median
asd_parc_centile <- data.frame(paste0("lh_", names(asd_parc)))
colnames(asd_parc_centile) = "label"
asd_parc_centile$median <- apply(asd_parc, 2, median, na.rm = TRUE)
# save the median
name <- paste0("centile_median_510_", newDate, ".xlsx")
write.xlsx(asd_parc_centile, file.path(resuDir, name))
View(asd_parc_centile)
View(asd_parc_centile)
ggseg(.data = asd_parc_centile, mapping = aes(fill = median), color = "black", atlas = dk,
position = "stacked", hemisphere = "left", size = 1.2) +
theme_void() +
theme(legend.title = element_blank(), legend.position = "bottom",
legend.key.width = unit(1, "cm")) +
scale_fill_gradient2(low = "#5378ac", mid = "white", high = "#d26b66", midpoint = 0.5,
limits = c(0.40, 0.63),
breaks = seq(0.40, 0.63, by = 0.05)) +
guides(fill = guide_colourbar(frame.colour = "black", frame.linewidth = 1, ticks = FALSE))
name <- file.path(plotDir, paste0("centile_regional_median_510_", newDate, ".png"))
ggsave(name, width = 7.8, height = 3, units = "in", dpi = 500)
asd_global <- asd_centile[which(names(asd_centile) == "GMV"):which(names(asd_centile) == "totalSA2")]
# transfer to long data
all_data <- gather(asd_global, key = "Measure", value = "Centile", GMV:totalSA2, na.rm = TRUE,
factor_key = TRUE)
# 修改度量标准的显示名称
all_data$Measure <- factor(all_data$Measure, levels = rev(c("TCV", "WMV", "GMV", "sGMV", "Ventricles",
"meanCT2", "totalSA2")),
# labels = rev(c("脑总容积", "白质总体积",
#            "皮层灰质总体积", "皮层下灰质总体积",
#            "脑脊液总体积", "平均皮层厚度",
#            "皮层总表面积")))
labels = rev(c("TCV", "WMV",
"GMV", "sGMV",
"CSF", "mCT",
"tSA")))
name_global <- paste0("centile_global_density_510_", newDate, ".png")
ggplot(all_data, aes(x = Centile, y = Measure, fill = Measure)) +
# geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 0.7, quantiles = 2, alpha = .88) +
geom_density_ridges(scale = 1.6, quantile_lines = TRUE, size = 1, quantiles = 2, alpha = .94) +
scale_x_continuous(breaks = seq(0, 1, by = 0.25), labels = c("0%", "25%", "50%", "75%", "100%")) +
scale_fill_manual(values = rep("white", length(levels(all_data$Measure)))) +
coord_fixed(ratio = 0.2) +
xlab("") +
ylab("") +
theme_ridges() +
theme(
# theme(text = element_text(family = "STSong"),
legend.position = "none", # without legend
axis.text.y = element_text(size = 15, face = "bold"),
axis.text.x = element_text(size = 15, face = "bold"))
# dev.off()
ggsave(file.path(plotDir, name_global), width = 6, height = 5, units = "in", dpi = 500)
source("C:/ASD-Project/Step3/Age510/norm_Centile_CABIC.R", echo=TRUE)
